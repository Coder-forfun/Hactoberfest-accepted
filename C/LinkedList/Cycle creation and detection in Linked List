#include<iostream>
using namespace std;

 class node{
 	public:
 	int data;
 	node *next;
 	
 	 node(int data){
	 this->data=data;
	 next=NULL;
	 
	 }
	 

 };
 node *take_input(){
 	int data;
	 cout<<"Enter Linked list Elements"<<endl;
	 cout<<"note:List should be terminated by -1"<<endl;
 	cin>>data;
 	node* head=NULL;
 	node* tail=NULL;
 	while(data!=-1){
 		node *n=new node(data);
 		if(head==NULL){
 			head=n;
 			tail=n;
 			
		 }
		 else{
		 	tail->next=n;
		 	tail=tail->next;
		 }
		 
	 cin>>data;
	 }
	  
	  return head;
}
 	 void display(node *head){
	
	 	while(head!=NULL){
	 		cout<<head->data<<"->";
	 		head=head->next;
		 }
		 cout<<"NULL";
	 }
    
	void make_cycle(node* head,int pos){
		int c=1;
		node* temp=head;
		node* startnode;
		while(temp->next!=NULL){
			if(pos==c){
				startnode=temp;
			}
			
			temp=temp->next;
			c++;
		}
		
		temp->next=startnode;
		
	}    
 bool detection_cycle(node* head){
 	node* slow=head;
 	node* fast=head;
 	while(fast && fast->next)
	 {
 		
 		slow=slow->next;
		 fast=fast->next->next;
 		if(slow==fast)
		 {
 			return true;
		 }
		 
	}
	 return false;
 }
 
int main(){
    node* head=take_input();
     int n;
	 cout<<"Enter the position to Make cycle"<<endl;
	 cin>>n;
	make_cycle(head,n);
		//display(head);
     cout<<detection_cycle(head)<<endl;
}
